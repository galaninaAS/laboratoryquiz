const questions = [
	{
	    question: "–ù–∞ —á–µ–ª–æ–≤–µ–∫–∞ –º–æ–∂–Ω–æ –≤–∑–≥–ª—è–Ω—É—Ç—å...",
	    answers: ["–∏—Å–ø–æ–¥—Ç–∏—à–∫–∞", "–∏–∑–ø–æ–¥—Ç–∏—à–∫–∞", "–∏–∑-–ø–æ–¥—Ç–∏—à–∫–∞"],
	    correct: 1,
	},
	{
	    question: "–£—á–µ–Ω—ã–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –≤ –≥–æ—Ä–∞—Ö –±–æ–ª–µ–µ –¥–µ—Å—è—Ç–∫–∞ –±–∞–≥–æ—Ä–∏–∫–æ–≤. –í—Å–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –±–∞–≥–æ—Ä–∏–∫–∏ —Å–∏–Ω–µ–≥–æ —Ü–≤–µ—Ç–∞.",
	    answers: [
			"–í—Å–µ –±–∞–≥–æ—Ä–∏–∫–∏ —Å–∏–Ω–∏–µ",
			"–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –±–∞–≥–æ—Ä–∏–∫–æ–≤ –Ω–µ —Å–∏–Ω–µ–≥–æ —Ü–≤–µ—Ç–∞",
			"–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –±–∞–≥–æ—Ä–∏–∫–æ–≤ —Å–∏–Ω–µ–≥–æ —Ü–≤–µ—Ç–∞",
	    ],
	    correct: 3,
	},
	{
	    question: "–í—Å–µ —Ñ–µ–Ω–∏–∫—Å—ã —É–º–µ—é—Ç –ª–µ—Ç–∞—Ç—å. –£ –≤—Å–µ—Ö —Ñ–µ–Ω–∏–∫—Å–æ–≤ –µ—Å—Ç—å –Ω–æ–≥–∏.",
	    answers: [
			"–í—Å–µ —Ñ–µ–Ω–∏–∫—Å—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –Ω–æ–≥–∏, —É–º–µ—é—Ç –ª–µ—Ç–∞—Ç—å.",
			"–ù–æ–≥–∏ –Ω–µ –º–µ—à–∞—é—Ç —Ñ–µ–Ω–∏–∫—Å–∞–º –ª–µ—Ç–∞—Ç—å.",
			"–ë–µ–∑ –Ω–æ–≥ —Ñ–µ–Ω–∏–∫—Å—ã –Ω–µ –º–æ–≥—É—Ç –ª–µ—Ç–∞—Ç—å",
	    ],
	    correct: 1,
	},
	{
	    question: "–ö–∞–∫–æ–π  —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –ª—ë–≥–∫–∏–º?",
	    answers: ["–ì–µ–ª–∏–π", "–ö–∏—Å–ª–æ—Ä–æ–¥", "–í–æ–¥–æ—Ä–æ–¥"],
	    correct: 3,
	},
    	{
    	    question: "–í –∫–∞–∫–æ–º –æ–∫–µ–∞–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ú–∞—Ä–∏–∞–Ω—Å–∫–∞—è –≤–ø–∞–¥–∏–Ω–∞?",
    	    answers: ["–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "–°–µ–≤–µ—Ä–Ω—ã–π –ª–µ–¥–æ–≤–∏—Ç—ã–π", "–¢–∏—Ö–∏–π"],
    	    correct: 3,
    	},
];

const headerContainer = document.querySelector('#header');
const listContainer = document.querySelector('#list');
const submitBtn = document.querySelector('#submit');

//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∞
let score = 0; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
let questionIndex = 0; //—Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å

cleanerPage();
showQuestion();


function cleanerPage() {
    headerContainer.innerHTML = '';
    listContainer.innerHTML = '';
}

function showQuestion() //—Ñ-–∏—è –æ—Ç–æ–±–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
{
    console.log('showQuestion');

    const headerTeamplate = `<h2 class="title">%title%</h2>`;
    const title = headerTeamplate.replace('%title%', questions[questionIndex]['question'])
    headerContainer.innerHTML = title;

    let answerNumber = 1;
    for (answerText of questions[questionIndex]['answers']) // –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    {
        const questionTemplate =
            `<li>
				<label>
					<input value = "%number%" type="radio" class="answer" name="answer" />
					<span>%answer%</span>
				</label>
			</li>`;

        let answerMTML = questionTemplate.replace('%answer%', answerText)

        answerMTML = answerMTML.replace('%number%', answerNumber);
        console.log(answerMTML);

        listContainer.innerHTML = listContainer.innerHTML + answerMTML;

        answerNumber++;
    }

    function checkAnswer() {
        console.log('checkAnswer start');

        const checkedRadio = listContainer.querySelector('input[type="radio"]:checked')

        if (checkedRadio) {
            console.log('ok');
        }

        else {
            return
        }


        const userAnswer = parseInt(checkedRadio.value) // –ù–æ–º—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        console.log(userAnswer, questions[questionIndex]['correct']);

        if (userAnswer == questions[questionIndex]['correct']) {
            score++;
        }

        console.log('score =', score);

        if (questionIndex !== questions.length - 1) {
            console.log('NO finish');
            questionIndex++;
            cleanerPage();
            showQuestion();
            return;
        }

        else {
            console.log('finish');
            cleanerPage();
            showResults();
        }
    }

    submitBtn.onclick = checkAnswer;

    function showResults() {
        console.log('res start');
        console.log(score);

        const resultsTemplate =
            `<h2 class="title">%title%</h2>
			<h3 class="summary">%message%</h3>
			<p class ="result">%result%</p>`;

        let title, message;

        if (score === questions.length) {
            title = '–°—É–ø–µ—Äü•á'
            message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!'
        }

        else if ((score * 100) / questions.length >= 50) {
            title = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Çü•à'
            message = '–í—ã –¥–∞–ª–∏ –ø–æ–ª–æ–≤–∏–Ω—É/–±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!'
        }

        else {
            title = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ü•â'
            message = '–í—ã –¥–∞–ª–∏ –º–µ–Ω–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.'
        }

        let result = `${score} –∏–∑ ${questions.length}`;

        const finalMessage = resultsTemplate
                .replace('%title%', title)
                .replace('%message%', message)
                .replace('%result%', result)

        headerContainer.innerHTML = finalMessage;

        submitBtn.blur();
        submitBtn.innerText = '–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â–µ —Ä–∞–∑'
        submitBtn.onclick = () => { history.go() };

    }
}
